#### Minimal Debian preseed - Terminal only with forced network selection
### Localization
d-i debian-installer/locale string en_US.UTF-8
d-i keyboard-configuration/xkb-keymap select us
### Network configuration - FORCE first interface
d-i netcfg/choose_interface select auto
d-i netcfg/disable_autoconfig boolean false
d-i netcfg/get_hostname string compute
d-i netcfg/get_domain string home
# Force DHCP and don't wait for user input
d-i netcfg/dhcp_timeout string 60
d-i netcfg/link_wait_timeout string 10
### Mirror settings
d-i mirror/country string manual
d-i mirror/http/hostname string deb.debian.org
d-i mirror/http/directory string /debian
d-i mirror/http/proxy string
### Account setup
d-i passwd/root-login boolean false
d-i passwd/user-fullname string System User
d-i passwd/username string piyer
# Password: mysecurepassword
d-i passwd/user-password-crypted password $6$xuYSuLIEiutAYV8P$aKnXTvKJg5E.R2FLblfXeahlXp/hnWWvJOrZ8VdJNQmRcQln1wpqZIV7o72ZgOQb.XuzU90ypjEShRFeGiZ8P/
d-i user-setup/allow-password-weak boolean true
### Clock and time zone setup
d-i clock-setup/utc boolean true
d-i time/zone string UTC
d-i clock-setup/ntp boolean true
### Partitioning
d-i partman-auto/method string regular
d-i partman-auto/choose_recipe select atomic
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
### Package selection
tasksel tasksel/first multiselect standard
d-i pkgsel/include string openssh-server vim curl wget
d-i pkgsel/upgrade select none
popularity-contest popularity-contest/participate boolean false
### Boot loader installation
d-i grub-installer/only_debian boolean true
d-i grub-installer/bootdev string default
### Post-installation hostname fix and compute provision setup
d-i preseed/late_command string \
    echo "compute" > /target/etc/hostname; \
    sed -i '/127.0.1.1/d' /target/etc/hosts; \
    echo "127.0.1.1 compute.home compute" >> /target/etc/hosts; \
    echo "127.0.0.1 localhost" > /target/etc/hosts.new; \
    echo "127.0.1.1 compute.home compute" >> /target/etc/hosts.new; \
    mv /target/etc/hosts.new /target/etc/hosts; \
    in-target systemctl enable systemd-hostnamed; \
    echo '[Unit]' > /target/etc/systemd/system/ansible-compute-provision.service; \
    echo 'Description=Compute Node Ansible Configuration on First Boot' >> /target/etc/systemd/system/ansible-compute-provision.service; \
    echo 'After=network-online.target systemd-resolved.service local-fs.target' >> /target/etc/systemd/system/ansible-compute-provision.service; \
    echo 'Wants=network-online.target' >> /target/etc/systemd/system/ansible-compute-provision.service; \
    echo '' >> /target/etc/systemd/system/ansible-compute-provision.service; \
    echo '[Service]' >> /target/etc/systemd/system/ansible-compute-provision.service; \
    echo 'Type=oneshot' >> /target/etc/systemd/system/ansible-compute-provision.service; \
    echo 'User=root' >> /target/etc/systemd/system/ansible-compute-provision.service; \
    echo 'Group=root' >> /target/etc/systemd/system/ansible-compute-provision.service; \
    echo 'ExecStart=/bin/bash -c "set -e; echo \"[\$(date)] Starting compute provision process...\" >> /var/log/ansible-compute-provision.log 2>&1; echo \"[\$(date)] Installing git and ansible...\" >> /var/log/ansible-compute-provision.log 2>&1; apt update >> /var/log/ansible-compute-provision.log 2>&1; DEBIAN_FRONTEND=noninteractive apt install -y git ansible >> /var/log/ansible-compute-provision.log 2>&1; echo \"[\$(date)] Cloning repository...\" >> /var/log/ansible-compute-provision.log 2>&1; cd /opt && git clone https://github.com/party-at-ten-forward/CS406-TurnkeyDC.git >> /var/log/ansible-compute-provision.log 2>&1; echo \"[\$(date)] Running compute ansible playbook...\" >> /var/log/ansible-compute-provision.log 2>&1; cd /opt/CS406-TurnkeyDC && ansible-playbook configure_compute.yml -v >> /var/log/ansible-compute-provision.log 2>&1; echo \"[\$(date)] Compute provision completed successfully!\" >> /var/log/ansible-compute-provision.log 2>&1"' >> /target/etc/systemd/system/ansible-compute-provision.service; \
    echo 'ExecStartPost=/bin/bash -c "if [ \$? -eq 0 ]; then echo \"[\$(date)] Cleaning up service...\" >> /var/log/ansible-compute-provision.log 2>&1; rm -f /etc/systemd/system/ansible-compute-provision.service; systemctl daemon-reload; else echo \"[\$(date)] Compute provision failed, keeping service for debugging\" >> /var/log/ansible-compute-provision.log 2>&1; fi"' >> /target/etc/systemd/system/ansible-compute-provision.service; \
    echo 'RemainAfterExit=yes' >> /target/etc/systemd/system/ansible-compute-provision.service; \
    echo 'StandardOutput=journal' >> /target/etc/systemd/system/ansible-compute-provision.service; \
    echo 'StandardError=journal' >> /target/etc/systemd/system/ansible-compute-provision.service; \
    echo '' >> /target/etc/systemd/system/ansible-compute-provision.service; \
    echo '[Install]' >> /target/etc/systemd/system/ansible-compute-provision.service; \
    echo 'WantedBy=multi-user.target' >> /target/etc/systemd/system/ansible-compute-provision.service; \
    in-target systemctl enable ansible-compute-provision.service; \
    touch /target/var/log/ansible-compute-provision.log
    
### Finishing up
d-i finish-install/reboot_in_progress note
d-i debian-installer/exit/halt boolean false
d-i debian-installer/exit/poweroff boolean false